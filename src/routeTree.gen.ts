/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as Projects2Import } from './routes/projects-2'
import { Route as Projects1Import } from './routes/projects-1'
import { Route as ContactImport } from './routes/contact'
import { Route as About2Import } from './routes/about-2'
import { Route as About1Import } from './routes/about-1'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const Projects2Route = Projects2Import.update({
  id: '/projects-2',
  path: '/projects-2',
  getParentRoute: () => rootRoute,
} as any)

const Projects1Route = Projects1Import.update({
  id: '/projects-1',
  path: '/projects-1',
  getParentRoute: () => rootRoute,
} as any)

const ContactRoute = ContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any)

const About2Route = About2Import.update({
  id: '/about-2',
  path: '/about-2',
  getParentRoute: () => rootRoute,
} as any)

const About1Route = About1Import.update({
  id: '/about-1',
  path: '/about-1',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about-1': {
      id: '/about-1'
      path: '/about-1'
      fullPath: '/about-1'
      preLoaderRoute: typeof About1Import
      parentRoute: typeof rootRoute
    }
    '/about-2': {
      id: '/about-2'
      path: '/about-2'
      fullPath: '/about-2'
      preLoaderRoute: typeof About2Import
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactImport
      parentRoute: typeof rootRoute
    }
    '/projects-1': {
      id: '/projects-1'
      path: '/projects-1'
      fullPath: '/projects-1'
      preLoaderRoute: typeof Projects1Import
      parentRoute: typeof rootRoute
    }
    '/projects-2': {
      id: '/projects-2'
      path: '/projects-2'
      fullPath: '/projects-2'
      preLoaderRoute: typeof Projects2Import
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about-1': typeof About1Route
  '/about-2': typeof About2Route
  '/contact': typeof ContactRoute
  '/projects-1': typeof Projects1Route
  '/projects-2': typeof Projects2Route
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about-1': typeof About1Route
  '/about-2': typeof About2Route
  '/contact': typeof ContactRoute
  '/projects-1': typeof Projects1Route
  '/projects-2': typeof Projects2Route
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about-1': typeof About1Route
  '/about-2': typeof About2Route
  '/contact': typeof ContactRoute
  '/projects-1': typeof Projects1Route
  '/projects-2': typeof Projects2Route
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about-1'
    | '/about-2'
    | '/contact'
    | '/projects-1'
    | '/projects-2'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about-1' | '/about-2' | '/contact' | '/projects-1' | '/projects-2'
  id:
    | '__root__'
    | '/'
    | '/about-1'
    | '/about-2'
    | '/contact'
    | '/projects-1'
    | '/projects-2'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  About1Route: typeof About1Route
  About2Route: typeof About2Route
  ContactRoute: typeof ContactRoute
  Projects1Route: typeof Projects1Route
  Projects2Route: typeof Projects2Route
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  About1Route: About1Route,
  About2Route: About2Route,
  ContactRoute: ContactRoute,
  Projects1Route: Projects1Route,
  Projects2Route: Projects2Route,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about-1",
        "/about-2",
        "/contact",
        "/projects-1",
        "/projects-2"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about-1": {
      "filePath": "about-1.tsx"
    },
    "/about-2": {
      "filePath": "about-2.tsx"
    },
    "/contact": {
      "filePath": "contact.tsx"
    },
    "/projects-1": {
      "filePath": "projects-1.tsx"
    },
    "/projects-2": {
      "filePath": "projects-2.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
